Description: 'Lab: Deploy VPC (VPC-03) and EC2 Instance (Web Server-03)'
Parameters:
  WindowsAmiId:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-windows-latest/Windows_Server-2019-English-Full-Base

Resources:
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 10.3.0.0/23
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: VPC-03

  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: IGW VPC-03

  AttachGateway:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select 
        - '0'
        - !GetAZs ''
      CidrBlock: 10.3.0.0/24
      VpcId: !Ref VPC
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: Public Subnet VPC-03

  ExternalRoutingTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: Public Route Table VPC-03

  DefaultRoute:
    Type: 'AWS::EC2::Route'
    DependsOn: AttachGateway
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref ExternalRoutingTable

  ExternalNetworkRouteAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref ExternalRoutingTable
      SubnetId: !Ref PublicSubnet

  WebServerSG:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: SG Web Server-03
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: SG Web Server-03
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3389
          ToPort: 3389
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: icmp
          FromPort: 8
          ToPort: -1
          CidrIp: 0.0.0.0/0

  WebInstance:
    Type: 'AWS::EC2::Instance'
    DependsOn: AttachGateway
    Properties:
      ImageId: !Ref WindowsAmiId
      Tags:
        - Key: Name
          Value: WebServer-03
      InstanceType: t2.micro
      SubnetId: !Ref PublicSubnet
      SecurityGroupIds:
        - !Ref WebServerSG
      UserData:
        Fn::Base64: !Sub |
            <Powershell>
            Set-ExecutionPolicy Unrestricted -Force
            New-Item -ItemType directory -Path 'C:\temp'
            Import-Module ServerManager
            install-windowsfeature web-server, web-webserver -IncludeAllSubFeature
            install-windowsfeature web-mgmt-tools
            Set-Location -Path C:\inetpub\wwwroot
            $shell_app = new-object -com shell.application
            (New-Object System.Net.WebClient).DownloadFile("https://raw.githubusercontent.com/ahmadzahoory/awssaprov1/master/tw-code-srv03.zip", (Get-Location).Path + "\tw-code-srv03.zip")
            $zipfile = $shell_app.Namespace((Get-Location).Path + "\tw-code-srv03.zip")
            $destination = $shell_app.Namespace((Get-Location).Path)
            $destination.copyHere($zipfile.items())
            New-WebApplication -Name netapp -PhysicalPath c:\inetpub\wwwroot\ec2-website -Site "Default Web Site" -force
            netsh advfirewall firewall add rule name="ICMP Allow incoming V4 echo request" dir=in action=allow enable=yes protocol=icmpv4:8,any
            function Disable-IEESC
            {
                $AdminKey = “HKLM:\SOFTWARE\Microsoft\Active Setup\Installed Components\{A509B1A7-37EF-4b3f-8CFC-4F3A74704073}”
                Set-ItemProperty -Path $AdminKey -Name “IsInstalled” -Value 0
                $UserKey = “HKLM:\SOFTWARE\Microsoft\Active Setup\Installed Components\{A509B1A8-37EF-4b3f-8CFC-4F3A74704073}”
                Set-ItemProperty -Path $UserKey -Name “IsInstalled” -Value 0
                Stop-Process -Name Explorer
                Write-Host “IE Enhanced Security Configuration (ESC) has been disabled.” -ForegroundColor Green
            }
            Disable-IEESC
            $Password = ConvertTo-SecureString -String "lab-password@123" -AsPlainText -Force
            $UserAccount = Get-LocalUser -Name "administrator"
            $UserAccount | Set-LocalUser -Password $Password
            Rename-Computer -NewName "webserver03"
            Restart-Computer
            </Powershell>

Outputs:
  Region:
    Value: !Ref 'AWS::Region'
    Description: Region of VPC-03
  VPCCIDRBlock:
    Value: !GetAtt VPC.CidrBlock
    Description: VPC-03/IP Range
  VPCID:
    Value: !Ref VPC
    Description: VPC-03/Id
  PublicSubnetCIDRBlock:
    Value: !GetAtt PublicSubnet.CidrBlock
    Description: VPC-03/PublicSubnet IP Range
  WebServer03PrivateIP:  
    Value: !GetAtt [WebInstance, PrivateIp]
    Description: WebServer03 Private IP Address
  WebServer03PublicIP:  
    Value: !GetAtt [WebInstance, PublicIp]
    Description: WebServer03 Public IP Address   
